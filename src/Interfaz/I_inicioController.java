package Interfaz;


import java.util.ArrayList;

import Logica.L_clientes;
import Modelo.M_Clientes;
import application.Main;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.MenuItem;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;

public class I_inicioController {
	private Stage stage = new Stage();
	private Main mn = new Main();
	

    @FXML
    private TableColumn<M_Clientes, String> colCorreo;

    @FXML
    private TableColumn<M_Clientes, String> colNombreCliente;

    @FXML
    private TableColumn<M_Clientes, String> colNroDoc;

    @FXML
    private TableColumn<M_Clientes, String> colTelefono;

    @FXML
    private TableColumn<M_Clientes, String> colTipoDoc;
    @FXML
    private TableColumn<M_Clientes, String> colIdCliente;
	
    @FXML
    private TextField txtIdCliente;
    @FXML
	private TextField txtNombreCliente;
	@FXML
	private TextField txtNroDoc;
	@FXML
	private TextField txtCorreo;
	@FXML
	private TextField txtTelefono;
	@FXML
	private ComboBox<String> cmbxTipoDoc;
	
	//lista para el combo box
	ObservableList<String> tipoDoc = FXCollections.observableArrayList("Documento Nacional de Identidad", "Carnet de Extranger√≠a", "Pasaporte", "Documento de Identidad Extrangero", "Registro Unico de Contribuyente");
	
    @FXML
    private MenuItem registroAuto;
    @FXML
    private MenuItem registroCliente;
    
    // tabla para llenar clientes
    @FXML
    private TableView<M_Clientes> tableClientes;
    
    //botones del formulario de clientes
    @FXML
	private Button btnRegistrarCliente;
	@FXML
	private Button btnLimpiarFormulario;
	@FXML
	private Button btnActualizarCliente;
	@FXML 
	private Button btnEliminarCLiente;
	@FXML 
	private Button btnSeleccionarCliente;
    
	
	//Lista de clientes
    private ObservableList<M_Clientes> clientesList = FXCollections.observableArrayList();
    
    
    
    //Botones del Formulario Cliente
    
    @FXML
	public void btnRegistrarCliente(ActionEvent event) {
		// TODO Autogenerated
		L_clientes.registrarCliente(txtNombreCliente, cmbxTipoDoc, txtNroDoc, txtCorreo, txtTelefono);
		llenarTablaClientes();
		
	}
	// Event Listener on Button[#btnLimpiarFormulario].onAction
	@FXML
	public void btnLimpiarFormulario(ActionEvent event) {
		// TODO Autogenerated
		txtNombreCliente.setText("");
		txtCorreo.setText("");
		txtNroDoc.setText("");
		txtTelefono.setText("");
	}
	
	@FXML
	void btnSeleccionarCliente(ActionEvent event) {
		M_Clientes cliente = new M_Clientes();
		cliente = tableClientes.getSelectionModel().getSelectedItem();
		if(cliente != null) {
			txtIdCliente.setText(String.valueOf(cliente.getId_cliente()));
			txtNombreCliente.setText(cliente.getNombre());
			cmbxTipoDoc.setValue(cliente.getTipo_documento());
			txtNroDoc.setText(cliente.getNro_documento());
			txtCorreo.setText(cliente.getCorreo());
			txtTelefono.setText(cliente.getTelefono());
		}		
	}
	
	@FXML
	void btnActualizarCliente(ActionEvent event) {
		L_clientes.actualizarCliente(txtIdCliente, txtNombreCliente, cmbxTipoDoc, txtNroDoc, txtCorreo, txtTelefono);
		llenarTablaClientes();
		System.out.println("Anny");
	}
    
	
	//Botones del menu 
    
    @FXML
    void btnAbrirRegistroAuto(ActionEvent event) throws Exception {
    	System.out.println("Auto");    	
    	mn.load(stage, "registroAuto", "Registro de Auto");    
    }

    @FXML
    void btnAbrirRegistroClientes(ActionEvent event) throws Exception {
    	mn.load(stage, "registroClientes", "Registro de Clientes");
    }
    
    @FXML
    public void initialize() {
    	llenarTablaClientes();
    	cargarComboBox();
    }        
    
    //Cargando el Combo Box
    public void cargarComboBox() {
    	cmbxTipoDoc.setValue(tipoDoc.get(0));
		cmbxTipoDoc.setItems(tipoDoc);
    }
    
    //Funcion para llenar la tabla 
    public void llenarTablaClientes() {
    	
    	colIdCliente.setCellValueFactory(new PropertyValueFactory<>("id_cliente"));
    	colNombreCliente.setCellValueFactory(new PropertyValueFactory<>("nombre"));
    	colTipoDoc.setCellValueFactory(new PropertyValueFactory<>("tipo_documento"));
    	colNroDoc.setCellValueFactory(new PropertyValueFactory<>("nro_documento"));
    	colCorreo.setCellValueFactory(new PropertyValueFactory<>("correo"));
    	colTelefono.setCellValueFactory(new PropertyValueFactory<>("telefono"));
    	
    	clientesList = L_clientes.listClientes();    	
    	tableClientes.setItems(clientesList);    	
    	
    }
    
    
    
}
